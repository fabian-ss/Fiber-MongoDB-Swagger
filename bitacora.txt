Requisitos:
    Database:
        Docker MongoDB :27017

    Fiber 
        Link:   
            https://docs.gofiber.io/

        Install:
            go get github.com/gofiber/fiber/v2

    Swagger
        Link:
            https://github.com/gofiber/swagger

        Install:
            go get -u github.com/swaggo/swag/cmd/swag
            go get -u github.com/gofiber/swagger

    Mongo
        Link:
            https://www.mongodb.com/docs/drivers/go/current/
            https://www.stackovercloud.com/2020/04/29/how-to-use-go-with-mongodb-using-the-mongodb-go-driver/
        Install:        
            go get go.mongodb.org/mongo-driver/mongo            

    Proyecto basado en el trabajo de esta pagina:
            https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-fiber-version-4la0
            Diferencias:
                -Integracion de Swagger
                -MongoDB en entorno local
                -Se cambio el modelo
                
    DotEnv:
        Link:
            https://github.com/joho/godotenv

        Install:
            go get github.com/joho/godotenv



Import 
    Fiber Swagger:
        import (
            "github.com/gofiber/swagger"
            "github.com/gofiber/fiber/v2"
            // docs are generated by Swag CLI, you have to import them.
            // replace with your own docs folder, usually "github.com/username/reponame/docs"
            _ "github.com/gofiber/swagger/example/docs"
        )        

    Mongo:
        import (
            "context"
            "fmt"
            "go.mongodb.org/mongo-driver/mongo"
            "go.mongodb.org/mongo-driver/mongo/options"
            "go.mongodb.org/mongo-driver/mongo/readpref"
        )    


Database: 
    Mongo docker-compose:

        search docker-compose folder in a admin cmd:
            docker-compose exec mongo /bin/sh

        Connect to mongosh using credential of docker-compose:
            mongosh "mongodb://localhost:27017" --username root --authenticationDatabase admin